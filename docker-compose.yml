version: '3.2'
services:
   auth:
      build:
         context: ./packages/auth/
         dockerfile: Dockerfile
         args:
            JAR_FILE: auth.jar
      image: dsinnovators/ieims-auth:${VERSION:-latest}
      ports:
      - 8081:8080
      - 8051:8010
      networks:
      - servicenet
      - redisnet
      volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
      environment:
      - UM_BASE_URL=http://user-management:8080
      - NS_BASE_URL=http://notification:8080
      - jwt.key.public=.secrets/public_key.pem
      - jwt.key.private=.secrets/private_key.pem
      - spring.redis.host=redis
      - rsa.key.input.mode=FILE
      - spring.profiles.active=${ACTIVE_PROFILES}
      - JWT_EXPIRATION_IN_MILLIS=${JWT_EXPIRATION_IN_MILLIS:-3600000L}
      - TZ=Asia/Dhaka
      depends_on:
      - redis
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   user-management:
      build:
         context: ./packages/user-management/
         dockerfile: Dockerfile
         args:
            JAR_FILE: user-management.jar
      image: dsinnovators/ieims-user-management:${VERSION:-latest}
      ports:
      - 8082:8080
      - 8052:8010
      networks:
      - servicenet
      - redisnet
      volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
      environment:
      - spring.datasource.url=${DB_SERVER} # Get it from env
      - spring.datasource.username=${DB_USERNAME} # Get it from env
      - spring.datasource.password=${DB_PASSWORD} # Get it from env
      - CONFIGURATION_BASE_URL=http://configuration:8080
      - jwt.key.public=.secrets/public_key.pem
      - rsa.key.input.mode=FILE
      - spring.redis.host=redis
      - NS_BASE_URL=http://notification:8080
      - PDM_BASE_URL=http://pdm:8080
      - spring.profiles.active=${ACTIVE_PROFILES}
      - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
      - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
      - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      depends_on:
      - redis
      deploy:
         resources:
            limits:
               memory: 500M
            reservations:
               memory: 200M
   redis:
      image: redis:6.0.9
      ports:
      - 6379:6379
      networks:
      - redisnet
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   login:
      build:
         context: ./packages/login
         dockerfile: Dockerfile
         args:
            JAR_FILE: login.jar
      image: dsinnovators/ieims-login:${VERSION:-latest}
      ports:
      - 8083:8080
      - 8053:8010
      networks:
      - servicenet
      - redisnet
      volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
      environment:
      - AUTH_BASE_URL=http://auth:8080
      - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
      - WEBSITE_BASE_URL=http://${HOST_IP:-host.docker.internal}:8099
      - CONTENT_LIBRARY_BASE_URL=http://${HOST_IP:-host.docker.internal}:8102
      - UM_BASE_URL=http://user-management:8080
      - METABASE_SECRET_KEY=${METABASE_SECRET_KEY}
      - METABASE_TOKEN_EXPIRATION_DURATION=60m
      - spring.redis.host=redis
      - rsa.key.input.mode=FILE
      - jwt.key.public=.secrets/public_key.pem
      - spring.profiles.active=${ACTIVE_PROFILES}
      - TZ=Asia/Dhaka
      - IEIMS_COOKIE_DOMAIN=docker.internal
      - SERVER_INDICATOR=${SERVER_INDICATOR:-dev}
      - NS_BASE_URL=http://notification:8080
      - NSA_PORTAL_BASE_URL=http://${HOST_IP:-host.docker.internal}:8111
      extra_hosts:
      - "host.docker.internal:host-gateway"
      depends_on:
      - redis
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   ops-web:
      build:
         context: ./packages/ops-web
         dockerfile: Dockerfile
         args:
            JAR_FILE: ops-web.jar
      image: dsinnovators/ieims-ops-web:${VERSION:-latest}
      ports:
      - 8084:8080
      - 8054:8010
      networks:
      - servicenet
      - redisnet
      volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
      environment:
      - AUTH_BASE_URL=http://auth:8080
      - UM_BASE_URL=http://user-management:8080
      - CONFIGURATION_BASE_URL=http://configuration:8080
      - SCHOOL_BASE_URL=http://school:8080
      - TEACHER_BASE_URL=http://teacher:8080
      - CENSUS_BASE_URL=http://census:8080
      - BM_BASE_URL=http://book-management:8080
      - REPORT_BASE_URL=http://report:8080
      - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
      - ACCOUNTING_BASE_URL=http://accounting:8080
      - GATEWAY_BASE_URL=http://${HOST_IP:-host.docker.internal}:8088
      - LOGIN_BASE_URL=http://${HOST_IP:-host.docker.internal}:8083
      - DASHBOARD_BASE_URL=http://${HOST_IP:-host.docker.internal}:3000
      - METABASE_SECRET_KEY=${METABASE_SECRET_KEY}
      - METABASE_TOKEN_EXPIRATION_DURATION=60m
      - JITSI_SECRET_KEY=${JITSI_SECRET_KEY:-default}
      - JITSI_BASE_URL=${JITSI_BASE_URL:-https://localhost:8443}
      - E_MONITORING_BASE_URL=http://e-monitoring:8080
      - jwt.key.public=.secrets/public_key.pem
      - rsa.key.input.mode=FILE
      - STORAGE_BASE_URL=http://storage:8080
      - TRAINING_BASE_URL=http://training:8080
      - LMS_BASE_URL=http://host.docker.internal:8097
      - LMS_MOODLE_COURSE_TEMPLATE_CATEGORY_ID=${LMS_MOODLE_COURSE_TEMPLATE_CATEGORY_ID:-1}
      - TRAINING_LMS_RUNNING_STATUS=${TRAINING_LMS_RUNNING_STATUS:-false}
      - TRAINING_JITSI_RUNNING_STATUS=${TRAINING_JITSI_RUNNING_STATUS:-false}
      - spring.profiles.active=${ACTIVE_PROFILES}
      - TZ=Asia/Dhaka
      - JASPER_FILE_PATH=/jasper-files
      - IEIMS_COOKIE_DOMAIN=docker.internal
      - ENABLE_EDITING_ON_REVIEWER_END=${ENABLE_EDITING_ON_REVIEWER_END:-false}
      - CASE_MANAGEMENT_BASE_URL=http://case-management:8080
      - PDM_BASE_URL=http://pdm:8080
      - RPM_BASE_URL=http://rpm:8080
      - PEPMIS_BASE_URL=http://pepmis:8080
      - WEBSITE_BASE_URL=${HOST_IP:-host.docker.internal}:8099
      - CONTENT_LIBRARY_BASE_URL=http://${HOST_IP:-host.docker.internal}:8102
      - STORAGE_MAX_FILE_SIZE=${STORAGE_MAX_FILE_SIZE:-10MB}
      - TMS_BASE_URL=http://tms:8080
      - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
      - NS_BASE_URL=http://notification:8080
      - NSA_BASE_URL=http://nsa:8080
      - OTP_EXPIRE_TIMEOUT_IN_SECONDS=${OTP_EXPIRE_TIMEOUT_IN_SECONDS:-300}
      - SERVER_INDICATOR=${SERVER_INDICATOR:-dev}
      - TMS_SHOW_SCHOOL_CHOICE_ORDER=${TMS_SHOW_SCHOOL_CHOICE_ORDER:-false}
      - PPE_ACADEMIC_GRADE_CONTROL_YEAR_VALUE=${PPE_ACADEMIC_GRADE_CONTROL_YEAR_VALUE:-2023}
      - JOB_WORKER_BASE_URL=http://job-worker:8080
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   notification:
      build:
         context: ./packages/notification/
         dockerfile: Dockerfile
         args:
            JAR_FILE: notification.jar
      image: dsinnovators/ieims-notification:${VERSION:-latest}
      ports:
      - 8085:8080
      - 8055:8010
      networks:
      - servicenet
      environment:
      - spring.datasource.url=${DB_SERVER} # Get it from env
      - spring.datasource.username=${DB_USERNAME} # Get it from env
      - spring.datasource.password=${DB_PASSWORD} # Get it from env
      - spring.profiles.active=${ACTIVE_PROFILES}
      - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
      - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
      - TZ=Asia/Dhaka
      - OTP_EXPIRE_TIMEOUT_IN_SECONDS=${OTP_EXPIRE_TIMEOUT_IN_SECONDS:-300}
      - SMS_DEFAULT_OTP=${SMS_DEFAULT_OTP:-0000}
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   configuration:
      build:
         context: ./packages/configuration/
         dockerfile: Dockerfile
         args:
            JAR_FILE: configuration.jar
      image: dsinnovators/ieims-configuration:${VERSION:-latest}
      ports:
      - 8086:8080
      - 8056:8010
      networks:
      - servicenet
      - redisnet
      environment:
      - spring.datasource.url=${DB_SERVER} # Get it from env
      - spring.datasource.username=${DB_USERNAME} # Get it from env
      - spring.datasource.password=${DB_PASSWORD} # Get it from env
      - spring.profiles.active=${ACTIVE_PROFILES}
      - UM_BASE_URL=http://user-management:8080
      - SCHOOL_BASE_URL=http://school:8080
      - TEACHER_BASE_URL=http://teacher:8080
      - CENSUS_BASE_URL=http://census:8080
      - BM_BASE_URL=http://book-management:8080
      - PDM_BASE_URL=http://pdm:8080
      - NS_BASE_URL=http://notification:8080
      - TMS_BASE_URL=http://tms:8080
      - ACCOUNTING_BASE_URL=http://accounting:8080
      - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
      - PEPMIS_BASE_URL=http://pepmis:8080
      - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
      - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
      - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
      - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 500M
            reservations:
               memory: 200M
   school:
      build:
         context: ./packages/school/
         dockerfile: Dockerfile
         args:
            JAR_FILE: school.jar
      image: dsinnovators/ieims-school:${VERSION:-latest}
      ports:
      - 8087:8080
      - 8057:8010
      networks:
      - servicenet
      - redisnet
      environment:
      - spring.datasource.url=${DB_SERVER} # Get it from env
      - spring.datasource.username=${DB_USERNAME} # Get it from env
      - spring.datasource.password=${DB_PASSWORD} # Get it from env
      - spring.profiles.active=${ACTIVE_PROFILES}
      - UM_BASE_URL=http://user-management:8080
      - TEACHER_BASE_URL=http://teacher:8080
      - TMS_BASE_URL=http://tms:8080
      - WEBSITE_BASE_URL=http://${HOST_IP:-host.docker.internal}:8099
      - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
      - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
      - TZ=Asia/Dhaka
      - CONFIGURATION_BASE_URL=http://configuration:8080
      - NS_BASE_URL=http://notification:8080
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   api-gateway:
      build:
         context: ./packages/api-gateway/
         dockerfile: Dockerfile
         args:
            JAR_FILE: api-gateway.jar
      image: dsinnovators/ieims-api-gateway:${VERSION:-latest}
      ports:
      - 8088:8080
      - 8058:8010
      networks:
      - servicenet
      - redisnet
      volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
      environment:
      - spring.profiles.active=${ACTIVE_PROFILES}
      - jwt.key.public=.secrets/public_key.pem
      - rsa.key.input.mode=FILE
      - UM_BASE_URL=http://user-management:8080
      - CONFIGURATION_BASE_URL=http://configuration:8080
      - SCHOOL_BASE_URL=http://school:8080
      - AUTH_BASE_URL=http://auth:8080
      - TEACHER_BASE_URL=http://teacher:8080
      - CENSUS_BASE_URL=http://census:8080
      - BM_BASE_URL=http://book-management:8080
      - STORAGE_BASE_URL=http://storage:8080
      - E_MONITORING_BASE_URL=http://e-monitoring:8080
      - TRAINING_BASE_URL=http://training:8080
      - CASE_MANAGEMENT_BASE_URL=http://case-management:8080
      - PDM_BASE_URL=http://pdm:8080
      - RPM_BASE_URL=http://rpm:8080
      - TMS_BASE_URL=http://tms:8080
      - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
      - CONTENT_LIBRARY_BASE_URL=http://content-library:8080
      - PEPMIS_BASE_URL=http://pepmis:8080
      - REPORT_BASE_URL=http://report:8080
      - NS_BASE_URL=http://notification:8080
      - NSA_BASE_URL=http://nsa:8080
      - TZ=Asia/Dhaka
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   dashboard:
      build:
         context: ./packages/dashboard/
         dockerfile: Dockerfile
         args:
             JAR_FILE: dashboard.jar
      image: dsinnovators/ieims-dashboard:${VERSION:-latest}
      networks:
      - servicenet
      ports:
      - 3000:3000
      environment:
      - MB_PLUGINS_DIR=/app/plugins
      - MB_DB_FILE=/metabase-data/metabase.db
      - MB_H2_DB_JDBC_URL=jdbc:h2:file:/metabase-data/metabase.db/metabase.db
      - JAVA_TIMEZONE=Asia/Dhaka
      - MUID=${USER_ID}
      - MGID=${GROUP_ID}
      - JAVA_OPTS=-Xmx2g -Dlog4j.configurationFile=file:/metabase-log/log-back.xml
      - MB_APP_DB_SERVER=${DB_SERVER}
      - MB_APP_DB_USERNAME=${DB_USERNAME}
      - MB_APP_DB_PASSWORD=${DB_PASSWORD}
      - MB_EMOJI_IN_LOGS="false"
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 800M
            reservations:
               memory: 500M
   teacher:
      build:
         context: ./packages/teacher/
         dockerfile: Dockerfile
         args:
            JAR_FILE: teacher.jar
      image: dsinnovators/ieims-teacher:${VERSION:-latest}
      ports:
         - 8089:8080
         - 8059:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - UM_BASE_URL=http://user-management:8080
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - SCHOOL_BASE_URL=http://school:8080
         - TMS_BASE_URL=http://tms:8080
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
                memory: 300M
            reservations:
                memory: 200M
   census:
      build:
         context: ./packages/census
         dockerfile: Dockerfile
         args:
            JAR_FILE: census.jar
      image: dsinnovators/ieims-census:${VERSION:-latest}
      ports:
         - 8090:8080
         - 8060:8010
      networks:
         - servicenet
         - redisnet
      environment:
        - spring.datasource.url=${DB_SERVER} # Get it from env
        - spring.datasource.username=${DB_USERNAME} # Get it from env
        - spring.datasource.password=${DB_PASSWORD} # Get it from env
        - spring.profiles.active=${ACTIVE_PROFILES}
        - SCHOOL_BASE_URL=http://school:8080
        - TEACHER_BASE_URL=http://teacher:8080
        - CONFIGURATION_BASE_URL=http://configuration:8080
        - BM_BASE_URL=http://book-management:8080
        - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
        - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
        - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 500M
            reservations:
               memory: 300M
   book-management:
      build:
         context: ./packages/book-management/
         dockerfile: Dockerfile
         args:
            JAR_FILE: book-management.jar
      image: dsinnovators/ieims-book-management:${VERSION:-latest}
      ports:
         - 8091:8080
         - 8061:8010
      networks:
         - servicenet
         - redisnet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - SCHOOL_BASE_URL=http://school:8080
         - CENSUS_BASE_URL=http://census:8080
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 500M
            reservations:
               memory: 300M
   training:
      build:
         context: ./packages/training/
         dockerfile: Dockerfile
         args:
            JAR_FILE: training.jar
      image: dsinnovators/ieims-training:${VERSION:-latest}
      ports:
         - 8092:8080
         - 8062:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - LMS_BASE_URL=http://host.docker.internal:8097 # Will be replaced by executing shell script value
         - LMS_WEB_SERVICE_TOKEN=${LMS_WEB_SERVICE_TOKEN}
         - LMS_USER_AUTH_TOKEN=${LMS_USER_AUTH_TOKEN}
         - LMS_TRAINING_DEFAULT_COURSE_CATEGORY_ID=${LMS_TRAINING_DEFAULT_COURSE_CATEGORY_ID}
         - LMS_MOODLE_COURSE_TEMPLATE_CATEGORY_ID=${LMS_MOODLE_COURSE_TEMPLATE_CATEGORY_ID:-1}
         - TRAINING_LMS_RUNNING_STATUS=${TRAINING_LMS_RUNNING_STATUS:-false}
         - NS_BASE_URL=http://notification:8080
         - UM_BASE_URL=http://user-management:8080
         - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
         - JOB_WORKER_BASE_URL=http://job-worker:8080
         - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   job-worker:
      build:
         context: ./packages/job-worker/
         dockerfile: Dockerfile
         args:
            JAR_FILE: job-worker.jar
      image: dsinnovators/ieims-job-worker:${VERSION:-latest}
      ports:
         - 8093:8080
         - 8063:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - NS_BASE_URL=http://notification:8080
         - NOTIFICATION_SMTP_HOST=${NOTIFICATION_SMTP_HOST}
         - NOTIFICATION_SMTP_PORT=${NOTIFICATION_SMTP_PORT}
         - NOTIFICATION_EMAIL_ADDRESS=${NOTIFICATION_EMAIL_ADDRESS}
         - NOTIFICATION_EMAIL_PASSWORD=${NOTIFICATION_EMAIL_PASSWORD}
         - NOTIFICATION_SMTP_AUTH=${NOTIFICATION_SMTP_AUTH}
         - NOTIFICATION_SMTP_TLS_ENABLE=${NOTIFICATION_SMTP_TLS_ENABLE}
         - NOTIFICATION_SMTP_TLS_REQUIRED=${NOTIFICATION_SMTP_TLS_REQUIRED}
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - TMS_BASE_URL=http://tms:8080
         - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
         - NSA_BASE_URL=http://nsa:8080
         - TZ=Asia/Dhaka
         - ENABLE_CUSTOM_EMAIL_NOTIFICATION_FOR_RECIPIENT=${ENABLE_CUSTOM_EMAIL_NOTIFICATION_FOR_RECIPIENT:-false}
         - RECIPIENT_CUSTOM_EMAIL_ADDRESS=${RECIPIENT_CUSTOM_EMAIL_ADDRESS}
         - LMS_WEB_SERVICE_TOKEN=${LMS_WEB_SERVICE_TOKEN}
         - LMS_BASE_URL=http://host.docker.internal:8097
         - SMS_GATEWAY_SERVER_NAME=${SMS_GATEWAY_SERVER_NAME:-bulksms1.teletalk.com.bd}
         - SMS_GATEWAY_SERVER_URL=${SMS_GATEWAY_SERVER_URL:-http://bulksms1.teletalk.com.bd:8091/jlinktbls.php}
         - SMS_GATEWAY_USER=${SMS_GATEWAY_USER:-DPE}
         - SMS_GATEWAY_PASSWORD=${SMS_GATEWAY_PASSWORD:-password}
         - SMS_GATEWAY_DPE_USER_ID=${SMS_GATEWAY_DPE_USER_ID:-70}
         - OTP_EXPIRE_TIMEOUT_IN_SECONDS=${OTP_EXPIRE_TIMEOUT_IN_SECONDS:-300}
         - SMS_SEND_OTP_TO_DEFAULT_NUMBER=${SMS_SEND_OTP_TO_DEFAULT_NUMBER:-true}
         - SMS_RECEIVER_DEFAULT_NUMBER=${SMS_RECEIVER_DEFAULT_NUMBER:-01313363666}
         - CRON_EXPRESSION_TO_CHANGE_SESSION_STATUS=${CRON_EXPRESSION_TO_CHANGE_SESSION_STATUS:-0 0 */1 * * *}
         - _JAVA_OPTIONS="-Xmx4g"
         - STORAGE_BASE_URL=http://storage:8080
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 350M
            reservations:
               memory: 300M
   e-monitoring:
      build:
         context: ./packages/e-monitoring/
         dockerfile: Dockerfile
         args:
            JAR_FILE: e-monitoring.jar
      image: dsinnovators/ieims-e-monitoring:${VERSION:-latest}
      ports:
         - 8094:8080
         - 8064:8010
      networks:
         - servicenet
         - redisnet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
         - SCHOOL_BASE_URL=http://school:8080
         - TEACHER_BASE_URL=http://teacher:8080
         - PDM_BASE_URL=http://pdm:8080
         - UM_BASE_URL=http://user-management:8080
         - STORAGE_BASE_URL=http://storage:8080
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   report:
      build:
         context: ./packages/report/
         dockerfile: Dockerfile
         args:
            JAR_FILE: report.jar
      image: dsinnovators/ieims-report:${VERSION:-latest}
      ports:
         - 8095:8080
         - 8065:8010
      networks:
         - servicenet
         - redisnet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
         - SCHOOL_BASE_URL=http://school:8080
         - TEACHER_BASE_URL=http://teacher:8080
         - RPM_BASE_URL=http://rpm:8080
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - E_MONITORING_BASE_URL=http://e-monitoring:8080
         - TRAINING_BASE_URL=http://training:8080
         - WEBSITE_BASE_URL=http://${HOST_IP:-host.docker.internal}:8099
         - STORAGE_BASE_URL=http://storage:8080
         - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
         - TMS_BASE_URL=http://tms:8080
         - PDM_BASE_URL=http://pdm:8080
         - ACCOUNTING_BASE_URL=http://accounting:8080
         - IEIMS_COOKIE_DOMAIN=docker.internal
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   storage:
      build:
         context: ./packages/storage/
         dockerfile: Dockerfile
         args:
            JAR_FILE: storage.jar
      image: dsinnovators/ieims-storage:${VERSION:-latest}
      ports:
         - 8096:8080
         - 8066:8010
      networks:
         - servicenet
      environment:
         - STORAGE_PATH=/storage
         - STORAGE_TEMP_PATH=/storage-temp
         - STORAGE_MAX_FILE_SIZE=${STORAGE_MAX_FILE_SIZE:-10MB}
         - STORAGE_MAX_REQUEST_SIZE=${STORAGE_MAX_REQUEST_SIZE:-10MB}
         - spring.profiles.active=${ACTIVE_PROFILES}
         - TZ=Asia/Dhaka
      extra_hosts:
      - "host.docker.internal:host-gateway"
      volumes:
      -  type: bind
         source: ${HOST_STORAGE_PATH:-./storage}
         target: /storage
      -  type: bind
         source: ${HOST_STORAGE_TEMP_PATH:-./storage-temp}
         target: /storage-temp
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   tangerine:
     build:
       context: ./packages/tangerine/
       dockerfile: Dockerfile
       args:
         JAR_FILE: tangerine.jar
     image: dsinnovators/ieims-tangerine:${VERSION:-latest}
     ports:
       - 8098:8080
       - 8067:8010
     networks:
       - servicenet
     environment:
       - spring.destination-ipemis-ipemis.jdbcUrl=${DB_SERVER} # Get it from env
       - spring.destination-ipemis-ipemis.username=${DB_USERNAME} # Get it from env
       - spring.destination-ipemis-ipemis.password=${DB_PASSWORD} # Get it from env
       - spring.profiles.active=${ACTIVE_PROFILES}
       - TANGERINE_BASIC_AUTH_USERNAME=${TANGERINE_BASIC_AUTH_USERNAME}
       - TANGERINE_BASIC_AUTH_PASSWORD=${TANGERINE_BASIC_AUTH_PASSWORD}
       - TANGERINE_BASE_URL=${TANGERINE_BASE_URL}
     extra_hosts:
       - "host.docker.internal:host-gateway"
     deploy:
       replicas: 0
       resources:
         limits:
           memory: 300M
         reservations:
           memory: 200M
   website:
     build:
       context: ./packages/website
       dockerfile: Dockerfile
       args:
         JAR_FILE: website.jar
     image: dsinnovators/ieims-website:${VERSION:-latest}
     ports:
       - 8099:8080
       - 8068:8010
     networks:
       - servicenet
     environment:
       - LOGIN_BASE_URL=http://${HOST_IP:-host.docker.internal}:8083
       - REPORT_BASE_URL=http://report:8080
       - CONTENT_LIBRARY_BASE_URL=http://content-library:8080
       - GATEWAY_BASE_URL=http://${HOST_IP:-host.docker.internal}:8088
       - RPM_BASE_URL=http://rpm:8080
       - CONFIGURATION_BASE_URL=http://configuration:8080
       - SCHOOL_BASE_URL=http://school:8080
       - PDM_BASE_URL=http://pdm:8080
       - spring.profiles.active=${ACTIVE_PROFILES}
       - METABASE_SECRET_KEY=${METABASE_SECRET_KEY}
       - METABASE_TOKEN_EXPIRATION_DURATION=60m
       - TZ=Asia/Dhaka
       - IEIMS_COOKIE_DOMAIN=docker.internal
       - TRAINING_BASE_URL=http://training:8080
       - SERVER_INDICATOR=${SERVER_INDICATOR:-dev}
       - jwt.key.public=.secrets/public_key.pem
       - rsa.key.input.mode=FILE
       - UM_BASE_URL=http://user-management:8080
       - AUTH_BASE_URL=http://auth:8080
       - NSA_PORTAL_BASE_URL=http://${HOST_IP:-host.docker.internal}:8111
     extra_hosts:
       - "host.docker.internal:host-gateway"
     volumes:
      -  type: bind
         source: ./.secrets
         target: /.secrets
     depends_on:
      - redis
     deploy:
       resources:
         limits:
           memory: 300M
         reservations:
           memory: 200M
   case-management:
      build:
         context: ./packages/case-management
         dockerfile: Dockerfile
         args:
            JAR_FILE: case-management.jar
      image: dsinnovators/ieims-case-management:${VERSION:-latest}
      ports:
         - 8100:8080
         - 8069:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   pdm:
      build:
         context: ./packages/pdm/
         dockerfile: Dockerfile
         args:
            JAR_FILE: pdm.jar
      image: dsinnovators/ieims-pdm:${VERSION:-latest}
      ports:
         - 8101:8080
         - 8070:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - UM_BASE_URL=http://user-management:8080
      extra_hosts:
      - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   content-library:
      build:
         context: ./packages/content-library/
         dockerfile: Dockerfile
         args:
            JAR_FILE: content-library.jar
      image: dsinnovators/ieims-content-library:${VERSION:-latest}
      ports:
         - 8102:8080
         - 8071:8010
      networks:
         - servicenet
         - redisnet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   pepmis:
      build:
         context: ./packages/pepmis/
         dockerfile: Dockerfile
         args:
            JAR_FILE: pepmis.jar
      image: dsinnovators/ieims-pepmis:${VERSION:-latest}
      ports:
         - 8103:8080
         - 8072:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - JOB_WORKER_BASE_URL=http://job-worker:8080
         - NS_BASE_URL=http://notification:8080
         - SCHOOL_BASE_URL=http://school:8080
         - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   maintainance-page:
      build:
         context: ./infrastructure/maintainance-page
         dockerfile: Dockerfile
      image: dsinnovators/ieims-maintainance-page:${VERSION:-latest}
      ports:
         - 8104:80
      deploy:
         replicas: 0
   rpm:
      build:
         context: ./packages/rpm/
         dockerfile: Dockerfile
         args:
            JAR_FILE: rpm.jar
      image: dsinnovators/ieims-rpm:${VERSION:-latest}
      ports:
         - 8105:8080
         - 8073:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - JOB_WORKER_BASE_URL=http://job-worker:8080
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 300M
            reservations:
               memory: 200M
   tms:
      build:
         context: ./packages/tms/
         dockerfile: Dockerfile
         args:
            JAR_FILE: tms.jar
      image: dsinnovators/ieims-tms:${VERSION:-latest}
      ports:
         - 8106:8080
         - 8074:8010
      networks:
         - servicenet
         - redisnet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - SCHOOL_BASE_URL=http://school:8080
         - TEACHER_BASE_URL=http://teacher:8080
         - CONFIGURATION_BASE_URL=http://configuration:8080
         - JOB_WORKER_BASE_URL=http://job-worker:8080
         - NS_BASE_URL=http://notification:8080
         - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   accounting:
      build:
         context: ./packages/accounting/
         dockerfile: Dockerfile
         args:
            JAR_FILE: accounting.jar
      image: dsinnovators/ieims-accounting:${VERSION:-latest}
      ports:
         - 8108:8080
         - 8076:8010
      networks:
         - servicenet
      environment:
         - spring.datasource.url=${DB_SERVER} # Get it from env
         - spring.datasource.username=${DB_USERNAME} # Get it from env
         - spring.datasource.password=${DB_PASSWORD} # Get it from env
         - spring.profiles.active=${ACTIVE_PROFILES}
         - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
         - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
         - FUND_ALLOCATION_BASE_URL=http://fund-allocation:8080
         - TZ=Asia/Dhaka
      extra_hosts:
         - "host.docker.internal:host-gateway"
      deploy:
         resources:
            limits:
               memory: 600M
            reservations:
               memory: 500M
   fund-allocation:
       build:
           context: ./packages/fund-allocation/
           dockerfile: Dockerfile
           args:
               JAR_FILE: fund-allocation.jar
       image: dsinnovators/ieims-fund-allocation:${VERSION:-latest}
       ports:
           - 8109:8080
           - 8077:8010
       networks:
           - servicenet
       environment:
           - spring.datasource.url=${DB_SERVER} # Get it from env
           - spring.datasource.username=${DB_USERNAME} # Get it from env
           - spring.datasource.password=${DB_PASSWORD} # Get it from env
           - spring.profiles.active=${ACTIVE_PROFILES}
           - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
           - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
           - SCHOOL_BASE_URL=http://school:8080
           - JOB_WORKER_BASE_URL=http://job-worker:8080
           - NS_BASE_URL=http://notification:8080
           - OPS_BASE_URL=http://${HOST_IP:-host.docker.internal}:8084
           - TZ=Asia/Dhaka
       extra_hosts:
           - "host.docker.internal:host-gateway"
       deploy:
           resources:
               limits:
                   memory: 600M
               reservations:
                   memory: 500M
   nsa:
     build:
       context: ./packages/nsa/
       dockerfile: Dockerfile
       args:
         JAR_FILE: nsa.jar
     image: dsinnovators/ieims-nsa:${VERSION:-latest}
     ports:
       - 8110:8080
       - 8078:8010
     networks:
       - servicenet
     environment:
       - spring.datasource.url=${DB_SERVER} # Get it from env
       - spring.datasource.username=${DB_USERNAME} # Get it from env
       - spring.datasource.password=${DB_PASSWORD} # Get it from env
       - spring.profiles.active=${ACTIVE_PROFILES}
       - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
       - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
       - SCHOOL_BASE_URL=http://school:8080
       - TEACHER_BASE_URL=http://teacher:8080
       - NS_BASE_URL=http://notification:8080
       - JOB_WORKER_BASE_URL=http://job-worker:8080
       - TZ=Asia/Dhaka
     extra_hosts:
       - "host.docker.internal:host-gateway"
     deploy:
       resources:
         limits:
           memory: 300M
         reservations:
           memory: 200M
   nsa-portal:
     build:
       context: ./packages/nsa-portal
       dockerfile: Dockerfile
       args:
         JAR_FILE: nsa-portal.jar
     image: dsinnovators/ieims-nsa-portal:${VERSION:-latest}
     ports:
       - 8111:8080
       - 8079:8010
     networks:
       - servicenet
     environment:
       - spring.datasource.url=${DB_SERVER} # Get it from env
       - spring.datasource.username=${DB_USERNAME} # Get it from env
       - spring.datasource.password=${DB_PASSWORD} # Get it from env
       - spring.profiles.active=${ACTIVE_PROFILES}
       - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL}
       - HIBERNATE_BINDER_LOG_LEVEL=${HIBERNATE_BINDER_LOG_LEVEL}
       - NSA_USER_DEFAULT_PASSWORD=${NSA_USER_DEFAULT_PASSWORD} # Get it from env
       - METABASE_SECRET_KEY=${METABASE_SECRET_KEY}
       - DASHBOARD_BASE_URL=${DASHBOARD_BASE_URL}
       - METABASE_TOKEN_EXPIRATION_DURATION=60m
       - GATEWAY_BASE_URL=http://${HOST_IP:-host.docker.internal}:8088
       - TZ=Asia/Dhaka
     extra_hosts:
       - "host.docker.internal:host-gateway"
     deploy:
       resources:
         limits:
           memory: 300M
         reservations:
           memory: 200M
networks:
   servicenet: null
   redisnet: null
